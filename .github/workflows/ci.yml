name: CI

on: [push, pull_request]

jobs:
    test:
        runs-on: ${{ matrix.operating-system }}
        env:
            APP_ENV: behat
            DB_HOST: localhost
            DB_TYPE: mysql
            DB_ROOT_PASSWORD: root
            DB_EZ_USER: ezp
            DB_EZ_PASSWORD: ezp
            DB_EZ_DATABASE: behattestdb
            PHP_VERSION: ${{ matrix.php }}
            EZ_BUNDLES: ${{ matrix.ez_bundles }}
            EZ_PACKAGES: ${{ matrix.ez_packages }}
        strategy:
            fail-fast: false
            matrix:
                # @see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners for available os versions
                include:
                    - php: '7.3'
                      ez_bundles: 'Kaliop\eZMigrationBundle\eZMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\EzPlatformMatrixFieldtypeBundle\EzPlatformMatrixFieldtypeBundle EzSystems\EzPlatformGraphQL\EzSystemsEzPlatformGraphQLBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:^3.0.6 ezsystems/ezplatform-xmltext-fieldtype:^2.0 netgen/tagsbundle:^4.0.15 ezsystems/behatbundle:^8.0 symfony/web-profiler-bundle:^5.1 symfony/debug-bundle:^5.1 symfony/maker-bundle:^1.14 overblog/graphiql-bundle'
                      operating-system: 'ubuntu-20.04'
                      code-coverage: ~
                    - php: '7.3'
                      ez_bundles: 'Kaliop\eZMigrationBundle\eZMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\EzPlatformMatrixFieldtypeBundle\EzPlatformMatrixFieldtypeBundle EzSystems\EzPlatformGraphQL\EzSystemsEzPlatformGraphQLBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:^3.1.5 ezsystems/ezplatform-xmltext-fieldtype:^2.0 netgen/tagsbundle:^4.0.15 ezsystems/behatbundle:^8.0 symfony/web-profiler-bundle:^5.1 symfony/debug-bundle:^5.1 symfony/maker-bundle:^1.14 overblog/graphiql-bundle'
                      operating-system: 'ubuntu-20.04'
                      code-coverage: ~
                    - php: '7.4'
                      ez_bundles: 'Kaliop\eZMigrationBundle\eZMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\EzPlatformMatrixFieldtypeBundle\EzPlatformMatrixFieldtypeBundle EzSystems\EzPlatformGraphQL\EzSystemsEzPlatformGraphQLBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:^3.2.8 ezsystems/ezplatform-xmltext-fieldtype:^2.0.2 netgen/tagsbundle:^4.0.18 lolautruche/ez-core-extra-bundle:^3.0 ezsystems/behatbundle:^8.0 symfony/web-profiler-bundle:^5.1 symfony/debug-bundle:^5.1 symfony/maker-bundle:^1.14 overblog/graphiql-bundle'
                      operating-system: 'ubuntu-22.04'
                      code-coverage: codecov
                    # @todo add tests for eZPlatform 3.3
                    #- php: '8.0'
                    #  ez_bundles: 'Kaliop\eZMigrationBundle\eZMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                    #  ez_packages: 'ibexa/oss:^3.3.13 netgen/tagsbundle:^4.0 ezsystems/behatbundle:^8.3.6 sensio/generator-bundle overblog/graphiql-bundle'
                    #  operating-system: 'ubuntu-22.04'
                    #  code-coverage: ~
        steps:
            -   name: checkout code
                uses: actions/checkout@v2

            # Although this action is useful, we prefer to use the same script to set up php that we use for the
            # docker image used for local testing. This allows us to make sure that script is always in good shape
            #-
            #    uses: shivammathur/setup-php@v2
            #    with:
            #        php-version: ${{ matrix.php }}
            #        extensions: curl, dom, mbstring, xsl
            #        ini-values: 'cgi.fix_pathinfo=1, always_populate_raw_post_data=-1'
            #        #tools: phpunit/phpunit:a_version_compatible_with_php_5.3-5.5
            #        # NB: this disables xdebug completely
            #        coverage: none

            -   name: get the teststack
                run: |
                    git clone --depth 1 https://github.com/tanoconsulting/euts.git teststack
                    # just in case...
                    chmod 755 ./teststack/bin/*.sh  ./teststack/bin/setup/*.sh

            # @todo avoid downloading composer deps on every workflow. Is this useful/working for us?
            #-
            #    uses: actions/cache@v2
            #    with:
            #        path: /tmp/composer-cache
            #        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

            # @todo stop any unused service and process to save ram/cpu: php-fpm (esp. if a != php version), docker,
            #       containerd, snapd, ModemManager?, pakagekit?, xsp4.exe

            # This sets up php and starts mysql
            -   name: set up the test env
                run: './teststack/bin/setup.sh'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: run tests and generate code coverage
                run: |
                    if [ -z "${{ matrix.code-coverage }}" ]; then
                        ./teststack/bin/runtests.sh
                    else
                        ./teststack/bin/runtests.sh -c coverage.clover
                        if [ -f coverage.clover ]; then
                            if [ "${{ matrix.code-coverage }}" = scrutinizer ]; then wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi
                            if [ "${{ matrix.code-coverage }}" = codecov ]; then curl -Os https://uploader.codecov.io/latest/linux/codecov && chmod +x codecov && ./codecov -t ${CODECOV_TOKEN} -f coverage.clover; fi
                        fi
                    fi

            -   name: troubleshoot
                if: ${{ failure() }}
                run: |
                    #env
                    #php -i
                    #systemctl list-units --all --type=service --no-pager | grep running
                    #ps auxwww
                    #dpkg --list | grep php
                    #pwd
                    #sudo env
                    #ls -ltr /var/log
                    sudo cat /var/log/php*.log
